---
- name: 'install'
  hosts: 'localhost'
  become: yes
  become_user: 'root'

  pre_tasks:
    - name: '1/2] [add open distro repository'
      command:
        cmd: curl https://d3g5vo6xdbdb9a.cloudfront.net/yum/opendistroforelasticsearch-artifacts.repo -o /etc/yum.repos.d/opendistroforelasticsearch.repo
        warn: no
    - name: '2/2] [installation of dependencies'
      yum:
        name: '{{ item }}'
        state: latest
      loop:
        - java-11-openjdk-devel
        - pwgen


  tasks:        
    - name: '1/19] [installation of Elasticsearch and Kibana'
      yum:
        name: '{{ item }}'
        state: latest
      loop:
        - opendistroforelasticsearch
        - opendistroforelasticsearch-kibana

    - name: '2/19] [backup of different configurations files'
      copy:
        src: '{{ item.src }}'
        dest: '{{ item.dest }}'
      loop:
        - { src: '/etc/elasticsearch/elasticsearch.yml', dest: '/etc/elasticsearch/elasticsearch.yml.bkp' }
        - { src: '/etc/kibana/kibana.yml', dest: '/etc/kibana/kibana.yml.bkp' } 
        - { src: '/usr/share/elasticsearch/plugins/opendistro_security/securityconfig/internal_users.yml', dest: '/usr/share/elasticsearch/plugins/opendistro_security/securityconfig/internal_users.yml.bkp' } 

    - name: '3/19] [installation of the user template'
      template:
        src: templates/internal_users.yml
        dest: /usr/share/elasticsearch/plugins/opendistro_security/securityconfig/internal_users.yml
        owner: root
        group: elasticsearch
        mode: '0640'

    - name: '4/19] [execution of the generation passwords script'
      script:
        cmd: scripts/password_generator.sh {{ item }}
      loop:
        - admin
        - kibanaserver
        - kibanaro
        - logstash
        - readall
        - snapshotrestore

    - name: '5/19] [restarting of Elasticsearch and Kibana'
      service:
        name: '{{ item }}'
        enabled: yes
        state: restarted
      loop:
        - elasticsearch
        - kibana

    - name: '6/19] [initialization of the security plugin'
      command:
        chdir: /usr/share/elasticsearch/plugins/opendistro_security/tools/
        cmd: bash securityadmin.sh -cd ../securityconfig/ -icl -nhnv  -cacert /etc/elasticsearch/root-ca.pem -cert /etc/elasticsearch/kirk.pem -key /etc/elasticsearch/kirk-key.pem

    - name: '7/19] [setting up of configuration templates'
      template:
        src: 'templates/{{ item.src }}'
        dest: '{{ item.dest }}'
        owner: '{{ item.owner }}'
        group: '{{ item.group }}'
        mode: '0640'
      loop:
        - { src: 'elasticsearch.yml', dest: '/etc/elasticsearch/elasticsearch.yml', owner: 'elasticsearch', group: 'elasticsearch' }
        - { src: 'kibana.yml', dest: '/etc/kibana/kibana.yml', owner: 'kibana', group: 'kibana' }

    - name: '8/19] [import instances.yml file'
      command:
        cmd: 'curl -so ~/wazuh-cert-tool.sh https://packages.wazuh.com/resources/4.1/open-distro/tools/certificate-utility/wazuh-cert-tool.sh'
        warn: no

    - name: '9/19] [import wazuh-cert-tool.sh'
      command:
        cmd: 'curl -so ~/instances.yml https://packages.wazuh.com/resources/4.1/open-distro/tools/certificate-utility/instances_aio.yml'
        warn: no

    - name: '10/19] [run wazuh-cert-tool.sh'
      command:
        chdir: '/etc/elasticsearch/'
        cmd: 'bash ~/wazuh-cert-tool.sh'
        warn: no

    - name: '11/19] [create certs folders'
      file:
        path: '{{ item }}certs'
        state: directory
      loop:
        - /etc/elasticsearch/
        - /etc/kibana/

    - name: '12/19] [transfer certificates from Kibana to his file'
      copy:
        src: '{{ item.src }}'
        dest: '{{ item.dest }}'
        owner: '{{ item.owner }}'
        group: '{{ item.group }}'
        mode: '0600'
      loop:
        - { src: '~/certs/admin.pem', dest: '/etc/elasticsearch/certs/admin.pem', owner: 'elasticsearch', group: 'elasticsearch' }
        - { src: '~/certs/admin-key.pem', dest: '/etc/elasticsearch/certs/admin-key.pem', owner: 'elasticsearch', group: 'elasticsearch' }
        - { src: '~/certs/elasticsearch.pem', dest: '/etc/elasticsearch/certs/elasticsearch.pem', owner: 'elasticsearch', group: 'elasticsearch' }
        - { src: '~/certs/elasticsearch-key.pem', dest: '/etc/elasticsearch/certs/elasticsearch-key.pem', owner: 'elasticsearch', group: 'elasticsearch' }
        - { src: '~/certs/filebeat.pem', dest: '/etc/elasticsearch/certs/filebeat.pem', owner: 'elasticsearch', group: 'elasticsearch' }
        - { src: '~/certs/filebeat-key.pem', dest: '/etc/elasticsearch/certs/filebeat-key.pem', owner: 'elasticsearch', group: 'elasticsearch' }
        - { src: '~/certs/root-ca.pem', dest: '/etc/elasticsearch/certs/root-ca.pem', owner: 'elasticsearch', group: 'elasticsearch' }
        - { src: '~/certs/root-ca.key', dest: '/etc/elasticsearch/certs/root-ca-key.pem', owner: 'elasticsearch', group: 'elasticsearch' }
        - { src: '~/certs/kibana.pem', dest: '/etc/kibana/certs/kibana.pem', owner: 'kibana', group: 'kibana' }
        - { src: '~/certs/root-ca.pem', dest: '/etc/kibana/certs/root-ca.pem', owner: 'kibana', group: 'kibana' }
        - { src: '~/certs/kibana-key.pem', dest: '/etc/kibana/certs/kibana-key.pem', owner: 'kibana', group: 'kibana' }

    - name: '13/19] [change subject for admin in elasticsearch.yml'
      script:
        cmd: scripts/change_admin_subject.sh

    - name: '14/19] [deletion of unnecessary files'
      file:
        path: '/etc/elasticsearch/{{ item }}'
        state: absent
      loop:
        - kirk.pem
        - kirk-key.pem
        - esnode.pem
        - esnode-key.pem
        - root-ca.pem

    - name: '15/19] [change kibanaserver password on kibana.yml'
      script:
        cmd: scripts/change_kibanasever_password.sh

    - name: '16/19] [restart of Elasticsearch and Kibana'
      service:
        name: '{{ item }}'
        state: restarted
      loop:
        - elasticsearch
        - kibana
    
    - name: '17/26] [set 443 for Kibana'
      command:
        cmd: 'setcap "cap_net_bind_service=+ep" /usr/share/kibana/node/bin/node'

    - name: '18/19] [initialization of the security plugin'
      command:
        chdir: /usr/share/elasticsearch/plugins/opendistro_security/tools/
        cmd: bash securityadmin.sh -cd ../securityconfig/ -icl -nhnv  -cacert /etc/elasticsearch/certs/root-ca.pem -cert /etc/elasticsearch/certs/admin.pem -key /etc/elasticsearch/certs/admin-key.pem

    - name: '19/19] [backup the configurations files'
      command:
        chdir: /usr/share/elasticsearch/plugins/opendistro_security/tools/
        cmd: bash securityadmin.sh -icl -nhnv  -cacert /etc/elasticsearch/certs/root-ca.pem -cert /etc/elasticsearch/certs/admin.pem -key /etc/elasticsearch/certs/admin-key.pem -backup /home/simonv/backup
        

